ru:
  loader: Загрузка ...
  hello: Hello world! RU
  header: RU
  language_en: Английский
  language_ru: Русский
  main: На главную
  about: О блоге
  author: С.Киевский
  describe:
    header: Про тестирование простыми словами
    tabs_and_page:

      tab_what_is_this_testing:
        tab: Что такое тестировани ПО?
        describe:
          line1: Тестирование программного обеспечения - это процесс проверки соответствия требований от заказчика и того что написали программисты.
          line2: Процесc когда мы проверяем как должно быть и как есть на самом деле, мы и называем - тестированием.
          line3: У каждого тестирования есть жиненый цыкл (ЖЦ). Не путайте с ЖЦ разработки или методологией разработки.
          line4: ЖЦ тестирования это этапы от самого начала тестирования и нахождение ошибок (багов), не соответствий и т. д., до его окночания, когда все ошибки исправлены - когда продукт соответсвует техническому заданию (ТЗ) от заказчика.
          line5: Чаще всего в процессе тестирования возникают дополнения к ТЗ, так как некоторые вещи, например технически нельзя реализовать и находятся другие варианты реализации для того что бы задание из ТЗ выполнялось.
          line6: "Давайте расмотри, так что же такое \"Жизненный цыкл в тестировании\" и его этапы:"
          line7: 1. <em>Планирование и анализ требований</em> - вы просто смотрите, что от вас хотят и говорите \"мне на это потребуется день два на разбор и просомтреть что готово а что нет в ПО\". <p>
          line8: 2. <em>Уточнение критериев приемки</em> - после того как вы прочитали и глянули сырой функционал вы обязательно уточняете минимальные требования для работоспособности ПО. Шаг обязателен.<p>
          line9: 3. <em>Уточнение стратегии тестирования</em> - в принцыпе без нее можно обойтись. Но важно понимать что стратегия в тестировании это - организация самого процесса тестирования при условии ограниченых ресурсов. По этому было бы неплохо понять что вообще из ресурсов имеется. Плюс к этому стратегия тестирования нужна для того что бы каждый из участников понимал какова роль тестирования в проекте, что тестируется, как тестируется и что бы у всех было реальное понимание в ожидании того что вообще происходит в контроле качества.<p>
          line10: "4. <em>Разработка тестовой документации</em> - это то самое что многие автоматизаторы не любят, это написание тест-кейсов. На данной стадии происходит разработка, доработка, тестовой документации: тест-кейс, тест-сьют, тест-планы<p>"
          line11: 5. <em>Выполнение тест-кейсов и Фиксация найденных дефектов</em> - говорит само за себя. Записали пошаговое выполнения какого то маленького кусочка ПО (тест-кейса) и начали его проверять. Опа! Выполненая проверка с тест-кейса не соответсвует тому что есть в ПО на самом деле - пишем ошибку в багтрекинг (платформа фиксации какого либо бага, таски, епика и т. д.)<p>
          line12: "6. <em>Анализ результатов тестирования и Отчетность - про это я напишу как пишут в просторах инета: формулируемые выводы зависят от плана тестирования и критериев приемки и служат основой для стадий 1,2,3 следующей итерации.</em>"
          line13: <em>Планирование (Planning) — непрерывный процесс принятия управленческих решений и методической организации усилий по их реализации с целью обеспечения качества некоторого процесса на протяжении длительного периода времени. По факту это собираются ваши коллеги и обсуждают какуюто доработку - вы в этом случаи, основываясь на своем опыте, говорите что вам например потребуется два дня на тестирование даной доработки, когда она будет готова.<br><br>Отчётность (reporting) - это сбор и распространение информации о результатах работы (включая текущий статус, оценку прогресса и прогноз развития ситуации).</em></blockquote>
          line14: "Звучит все ужасно и непонятно - но это только пока, когда начнется практика, для Вас все что написано выше, станет привычным и понятным. Поехали дальше!"
          line15: Так как в ЖЦ тестирования есть множество подходов, в самом тестировании вывели <a href="#" id="type_testing" onclick=clickTab("#types-qa")>Виды тестирования</a>

      tab_testing_types:
        tab: Виды тестирования
        describe:
          head: "Необходимо подсветить главные типы тетсирования:"
          functional_testing: Функциональное тестирование
          functional_testing_describe: Проверка функциональности (тестирование методом «черного ящика») – проверка соответствия программного обеспечения требованиям, заявленным в спецификации. Может проводиться как полное тестирование заявленной функциональность, так и проверка только базовой функциональности. Тестирование «белого ящика» (white box) тестирование на соответствие программного продукта требованиям со знанием внутренней структуры реализации системы (есть в наличии исходный код и технические спецификации). Тестирование «черного ящика» (black box) тестирование на соответствие программного продукта требованиям без знания внутренней структуры реализации системы.
          system_testing: Системное тестирование
          system_testing_describe: Высокоуровневая проверка функционала всей программы или системы в целом. Или проще говоря проверяется система, платформа или окружение где должно работать то или иное ПО.
          performance_testing: Тестирование производительности
          performance_testing_describe: <p>Тестирование, которое проводится с целью определения, как быстро работает система или её часть под определённой нагрузкой.</p><ul><li><b>Нагрузочное тестирование (load testing)</b></li></ul><p>Тестирование предназначено для проверки работоспособности системы при стандартных нагрузках и для определения максимально возможного пика, при котором система работает правильно.</p><ul><li><b>Стресс тестирование (stress testing)</b></li></ul><p>Тестирование предназначено для проверки работоспособности системы при <i>не</i>стандартных нагрузках и для определения максимально возможного пика, при котором система работает правильно. Так же предназначено для выявления результатов, при которых система переходит в нерабочее состояние.</p>
          regression_testing: Регрессионное тестирование
          regression_testing_describe: Регрессионное тестирование проводится с целью проверить, не влияют ли новые функции, улучшения и исправленные дефекты на существующую функциональность продукта и не возникают ли старые дефекты.
          unit_testing: Модульное тестирование
          unit_testing_describe: Каждая сложная программная система состоит из отдельных частей - модулей, выполняющих ту или иную функцию в составе системы. Для того, чтобы удостовериться в корректной работе всей системы, необходимо вначале протестировать каждый модуль системы по отдельности. В случае возникновения проблем при тестировании системы в целом это позволяет проще выявить модули, вызвавшие проблему, и устранить соответствующие дефекты в них. Такое тестирование модулей по отдельности получило называние модульного тестирования.
          security_testing: Тестирование безопасности
          security_testing_describe: Тестирование безопасности - это стратегия тестирования, используемая для проверки безопасности системы, а также для анализа рисков, связанных с обеспечением целостного подхода к защите приложения, атак хакеров, вирусов, несанкционированного доступа к конфиденциальным данным.
          localization_testing: Тестирование локализации
          localization_testing_describe: Тестирование локализации - это процесс тестирования локализованной версии программного продукта. Проверка правильности перевода элементов интерфейса пользователя, проверка правильности перевода системных сообщений и ошибок, проверка перевода раздела "Помощь"/"Справка" и сопроводительной документации.
          usability_testing: Юзабилити тестирование
          usability_testing_describe: Тестирование удобства пользования - это метод тестирования, направленный на установление степени удобства использования, обучаемости, понятности и привлекательности для пользователей разрабатываемого продукта в контексте заданных условий. Выявлять проблемы, связанные со специфическим механизмом интерфейса определять, существуют ли проблемы с удобностью интерфейса для навигации, использования основного функционала.

      tab_who_are_qa:
        tab: Кто такие QA?
        head: QA - не професия, a вдохновение и вечное совершенствование!
        describe: "Работа Quality Assurance engineer заключается скорее всего в контроле за правильным выполнением всех этапов разработки и правильной работы итогового продукта. Очень похоже на то за чем следит тестировщик-мануальщик. Но Тестировщик мануальщик проверяет ПО, и по результатам проверки ПО либо принимает его, либо отправляет на доработку, если есть баги или неточности. QA инженер также соблюдает стандарты разработки програм, взаимодейтсвует с множеством людей, таких как: программисты, аналитики, продакт овнеры, заказчики, дизайнеры и т.д., но более тесно. Он буквально залазит в продукт и разбирает его по кусочкам и когда видит в целом что да как, может подсказать или предовратить появление багов, расказав колегам о найденых проблемах."
        describe2: "QA инженер это человек который видит продукт со стороны, внутри, и как стороний наблюдатель который далек от айти. Но для того что бы видеть так нужно много практиковатся и копить опыт."
        responsibilities: "В обязаности тестироващика чаще всего входят:"
        responsibilities_describe: <ul><li>анализ и расчет времени нужного на создание приложения или исправление бага</li><li>процесс тестирования непосредственно</li><li>повторное тестирование моментов в которых ранее были обнаружены проблемы</li><li>разработка сценариев тестирования</li><li>внесение обнаруженных недочетов или багов в трекинговую систему</li><li>обсуждение исправлений с всеми участниками разработки и аналитики</li><li>отслеживание процесса исправления</li><li>анализ результатов тестирований</li><li>доработка сценариев</li><li>ведение документации по тестам</li></ul>

      tab_gui: Что такое GUI тестирование?
      tab_api: Что такое Api тестирование?
      tab_mobile: Что такое Mobile тестирование?